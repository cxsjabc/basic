A.cpp.simple.elf:
(__TEXT,__text) section
_main:
0000000100000d30	pushq	%rbp
0000000100000d31	movq	%rsp, %rbp
0000000100000d34	subq	$0x40, %rsp
0000000100000d38	movl	$0x0, -0x4(%rbp)
0000000100000d3f	movl	$0x1, %eax
0000000100000d44	movl	%eax, %edi
0000000100000d46	callq	0x100001c6a
0000000100000d4b	movq	%rax, %rdi
0000000100000d4e	movq	%rax, %rcx
0000000100000d51	movq	%rdi, -0x28(%rbp)
0000000100000d55	movq	%rax, %rdi
0000000100000d58	movq	%rcx, -0x30(%rbp)
0000000100000d5c	callq	0x100001c04
0000000100000d61	jmp	0x100000d66
0000000100000d66	movq	-0x30(%rbp), %rax
0000000100000d6a	movq	%rax, -0x10(%rbp)
0000000100000d6e	movq	-0x10(%rbp), %rax
0000000100000d72	cmpq	$0x0, %rax
0000000100000d78	movq	%rax, -0x38(%rbp)
0000000100000d7c	je	0x100000d9c
0000000100000d82	movq	-0x38(%rbp), %rdi
0000000100000d86	callq	0x100001bf8
0000000100000d8b	jmp	0x100000d90
0000000100000d90	movq	-0x38(%rbp), %rax
0000000100000d94	movq	%rax, %rdi
0000000100000d97	callq	0x100001c64
0000000100000d9c	movl	$0x0, %eax
0000000100000da1	addq	$0x40, %rsp
0000000100000da5	popq	%rbp
0000000100000da6	retq
0000000100000da7	movl	%edx, %ecx
0000000100000da9	movq	%rax, -0x18(%rbp)
0000000100000dad	movl	%ecx, -0x1c(%rbp)
0000000100000db0	movq	-0x28(%rbp), %rdi
0000000100000db4	callq	0x100001c64
0000000100000db9	jmp	0x100000dd3
0000000100000dbe	movl	%edx, %ecx
0000000100000dc0	movq	%rax, -0x18(%rbp)
0000000100000dc4	movl	%ecx, -0x1c(%rbp)
0000000100000dc7	movq	-0x38(%rbp), %rax
0000000100000dcb	movq	%rax, %rdi
0000000100000dce	callq	0x100001c64
0000000100000dd3	movq	-0x18(%rbp), %rdi
0000000100000dd7	callq	0x100001c7c
0000000100000ddc	nop
0000000100000ddd	nop
0000000100000dde	nop
0000000100000ddf	nop
__ZN1BC1Ev:
0000000100000de0	pushq	%rbp
0000000100000de1	movq	%rsp, %rbp
0000000100000de4	subq	$0x10, %rsp
0000000100000de8	movq	%rdi, -0x8(%rbp)
0000000100000dec	movq	-0x8(%rbp), %rdi
0000000100000df0	callq	0x100001c0a
0000000100000df5	addq	$0x10, %rsp
0000000100000df9	popq	%rbp
0000000100000dfa	retq
0000000100000dfb	nopl	(%rax,%rax)
__ZN1AD1Ev:
0000000100000e00	pushq	%rbp
0000000100000e01	movq	%rsp, %rbp
0000000100000e04	subq	$0x10, %rsp
0000000100000e08	movq	%rdi, -0x8(%rbp)
0000000100000e0c	movq	-0x8(%rbp), %rdi
0000000100000e10	callq	0x100001bfe
0000000100000e15	addq	$0x10, %rsp
0000000100000e19	popq	%rbp
0000000100000e1a	retq
0000000100000e1b	nopl	(%rax,%rax)
__ZN1AD2Ev:
0000000100000e20	pushq	%rbp
0000000100000e21	movq	%rsp, %rbp
0000000100000e24	subq	$0x20, %rsp
0000000100000e28	movq	0x11e1(%rip), %rax
0000000100000e2f	leaq	0x10c2(%rip), %rsi
0000000100000e36	movq	%rdi, -0x18(%rbp)
0000000100000e3a	movq	%rax, %rdi
0000000100000e3d	callq	0x100001c16
0000000100000e42	leaq	0x77(%rip), %rsi
0000000100000e49	movq	%rax, -0x8(%rbp)
0000000100000e4d	movq	%rsi, -0x10(%rbp)
0000000100000e51	movq	-0x8(%rbp), %rdi
0000000100000e55	callq	*-0x10(%rbp)
0000000100000e58	movq	%rax, -0x20(%rbp)
0000000100000e5c	addq	$0x20, %rsp
0000000100000e60	popq	%rbp
0000000100000e61	retq
0000000100000e62	nopw	%cs:(%rax,%rax)
__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc:
0000000100000e70	pushq	%rbp
0000000100000e71	movq	%rsp, %rbp
0000000100000e74	subq	$0x30, %rsp
0000000100000e78	movq	%rdi, -0x10(%rbp)
0000000100000e7c	movq	%rsi, -0x18(%rbp)
0000000100000e80	movq	-0x10(%rbp), %rdi
0000000100000e84	movq	-0x18(%rbp), %rsi
0000000100000e88	movq	-0x18(%rbp), %rax
0000000100000e8c	movq	%rax, -0x8(%rbp)
0000000100000e90	movq	-0x8(%rbp), %rax
0000000100000e94	movq	%rdi, -0x20(%rbp)
0000000100000e98	movq	%rax, %rdi
0000000100000e9b	movq	%rsi, -0x28(%rbp)
0000000100000e9f	callq	0x100001c82
0000000100000ea4	movq	-0x20(%rbp), %rdi
0000000100000ea8	movq	-0x28(%rbp), %rsi
0000000100000eac	movq	%rax, %rdx
0000000100000eaf	callq	0x100001c10
0000000100000eb4	addq	$0x30, %rsp
0000000100000eb8	popq	%rbp
0000000100000eb9	retq
0000000100000eba	nopw	(%rax,%rax)
__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_:
0000000100000ec0	pushq	%rbp
0000000100000ec1	movq	%rsp, %rbp
0000000100000ec4	subq	$0x90, %rsp
0000000100000ecb	movq	%rdi, -0x48(%rbp)
0000000100000ecf	movq	%rdi, %rax
0000000100000ed2	movq	(%rdi), %rcx
0000000100000ed5	movq	-0x18(%rcx), %rcx
0000000100000ed9	addq	%rcx, %rdi
0000000100000edc	movq	%rdi, -0x20(%rbp)
0000000100000ee0	movb	$0xa, -0x21(%rbp)
0000000100000ee4	movq	-0x20(%rbp), %rsi
0000000100000ee8	leaq	-0x30(%rbp), %rcx
0000000100000eec	movq	%rcx, %rdi
0000000100000eef	movq	%rax, -0x50(%rbp)
0000000100000ef3	movq	%rcx, -0x58(%rbp)
0000000100000ef7	callq	0x100001c22
0000000100000efc	movq	-0x58(%rbp), %rax
0000000100000f00	movq	%rax, -0x18(%rbp)
0000000100000f04	movq	0x110d(%rip), %rsi
0000000100000f0b	movq	%rax, %rdi
0000000100000f0e	callq	0x100001c1c
0000000100000f13	movq	%rax, -0x60(%rbp)
0000000100000f17	jmp	0x100000f1c
0000000100000f1c	movb	-0x21(%rbp), %al
0000000100000f1f	movq	-0x60(%rbp), %rcx
0000000100000f23	movq	%rcx, -0x8(%rbp)
0000000100000f27	movb	%al, -0x9(%rbp)
0000000100000f2a	movq	-0x8(%rbp), %rdx
0000000100000f2e	movq	(%rdx), %rsi
0000000100000f31	movq	0x38(%rsi), %rsi
0000000100000f35	movsbl	-0x9(%rbp), %edi
0000000100000f39	movl	%edi, -0x64(%rbp)
0000000100000f3c	movq	%rdx, %rdi
0000000100000f3f	movl	-0x64(%rbp), %r8d
0000000100000f43	movq	%rsi, -0x70(%rbp)
0000000100000f47	movl	%r8d, %esi
0000000100000f4a	movq	-0x70(%rbp), %rdx
0000000100000f4e	callq	*%rdx
0000000100000f50	movb	%al, -0x71(%rbp)
0000000100000f53	jmp	0x100000f85
0000000100000f58	movl	%edx, %ecx
0000000100000f5a	movq	%rax, -0x38(%rbp)
0000000100000f5e	movl	%ecx, -0x3c(%rbp)
0000000100000f61	leaq	-0x30(%rbp), %rdi
0000000100000f65	callq	0x100001c4c
0000000100000f6a	jmp	0x100000f6f
0000000100000f6f	movq	-0x38(%rbp), %rdi
0000000100000f73	callq	0x100001c7c
0000000100000f78	movl	%edx, %ecx
0000000100000f7a	movq	%rax, %rdi
0000000100000f7d	movl	%ecx, -0x78(%rbp)
0000000100000f80	callq	0x100000fd0
0000000100000f85	leaq	-0x30(%rbp), %rdi
0000000100000f89	callq	0x100001c4c
0000000100000f8e	movq	-0x50(%rbp), %rdi
0000000100000f92	movb	-0x71(%rbp), %al
0000000100000f95	movsbl	%al, %esi
0000000100000f98	callq	0x100001c34
0000000100000f9d	movq	-0x48(%rbp), %rdi
0000000100000fa1	movq	%rax, -0x80(%rbp)
0000000100000fa5	callq	0x100001c3a
0000000100000faa	movq	-0x48(%rbp), %rdi
0000000100000fae	movq	%rax, -0x88(%rbp)
0000000100000fb5	movq	%rdi, %rax
0000000100000fb8	addq	$0x90, %rsp
0000000100000fbf	popq	%rbp
0000000100000fc0	retq
0000000100000fc1	nopw	%cs:(%rax,%rax)
___clang_call_terminate:
0000000100000fd0	pushq	%rbp
0000000100000fd1	movq	%rsp, %rbp
0000000100000fd4	subq	$0x10, %rsp
0000000100000fd8	callq	0x100001c70
0000000100000fdd	movq	%rax, -0x8(%rbp)
0000000100000fe1	callq	0x100001c5e
0000000100000fe6	nopw	%cs:(%rax,%rax)
__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m:
0000000100000ff0	pushq	%rbp
0000000100000ff1	movq	%rsp, %rbp
0000000100000ff4	subq	$0x1a0, %rsp            ## imm = 0x1A0
0000000100000ffb	movq	%rdi, -0xd0(%rbp)
0000000100001002	movq	%rsi, -0xd8(%rbp)
0000000100001009	movq	%rdx, -0xe0(%rbp)
0000000100001010	movq	-0xd0(%rbp), %rsi
0000000100001017	leaq	-0xf0(%rbp), %rdi
000000010000101e	callq	0x100001c40
0000000100001023	jmp	0x100001028
0000000100001028	leaq	-0xf0(%rbp), %rax
000000010000102f	movq	%rax, -0xc8(%rbp)
0000000100001036	movq	-0xc8(%rbp), %rax
000000010000103d	movb	(%rax), %cl
000000010000103f	movb	%cl, -0x111(%rbp)
0000000100001045	movb	-0x111(%rbp), %al
000000010000104b	testb	$0x1, %al
000000010000104d	jne	0x100001058
0000000100001053	jmp	0x1000013c8
0000000100001058	leaq	-0x108(%rbp), %rax
000000010000105f	movq	-0xd0(%rbp), %rcx
0000000100001066	movq	%rax, -0xb8(%rbp)
000000010000106d	movq	%rcx, -0xc0(%rbp)
0000000100001074	movq	-0xb8(%rbp), %rax
000000010000107b	movq	-0xc0(%rbp), %rcx
0000000100001082	movq	%rax, -0x98(%rbp)
0000000100001089	movq	%rcx, -0xa0(%rbp)
0000000100001090	movq	-0x98(%rbp), %rax
0000000100001097	movq	-0xa0(%rbp), %rcx
000000010000109e	movq	(%rcx), %rdx
00000001000010a1	movq	-0x18(%rdx), %rdx
00000001000010a5	addq	%rdx, %rcx
00000001000010a8	movq	%rcx, -0x90(%rbp)
00000001000010af	movq	-0x90(%rbp), %rcx
00000001000010b6	movq	%rcx, -0x88(%rbp)
00000001000010bd	movq	-0x88(%rbp), %rcx
00000001000010c4	movq	0x28(%rcx), %rcx
00000001000010c8	movq	%rcx, (%rax)
00000001000010cb	movq	-0xd8(%rbp), %rsi
00000001000010d2	movq	-0xd0(%rbp), %rax
00000001000010d9	movq	(%rax), %rcx
00000001000010dc	movq	-0x18(%rcx), %rcx
00000001000010e0	addq	%rcx, %rax
00000001000010e3	movq	%rax, -0x60(%rbp)
00000001000010e7	movq	-0x60(%rbp), %rax
00000001000010eb	movl	0x8(%rax), %edi
00000001000010ee	movq	%rsi, -0x120(%rbp)
00000001000010f5	movl	%edi, -0x124(%rbp)
00000001000010fb	movl	-0x124(%rbp), %eax
0000000100001101	andl	$0xb0, %eax
0000000100001106	cmpl	$0x20, %eax
000000010000110b	jne	0x10000112b
0000000100001111	movq	-0xd8(%rbp), %rax
0000000100001118	addq	-0xe0(%rbp), %rax
000000010000111f	movq	%rax, -0x130(%rbp)
0000000100001126	jmp	0x100001139
000000010000112b	movq	-0xd8(%rbp), %rax
0000000100001132	movq	%rax, -0x130(%rbp)
0000000100001139	movq	-0x130(%rbp), %rax
0000000100001140	movq	-0xd8(%rbp), %rcx
0000000100001147	addq	-0xe0(%rbp), %rcx
000000010000114e	movq	-0xd0(%rbp), %rdx
0000000100001155	movq	(%rdx), %rsi
0000000100001158	movq	-0x18(%rsi), %rsi
000000010000115c	addq	%rsi, %rdx
000000010000115f	movq	-0xd0(%rbp), %rsi
0000000100001166	movq	(%rsi), %rdi
0000000100001169	movq	-0x18(%rdi), %rdi
000000010000116d	addq	%rdi, %rsi
0000000100001170	movq	%rsi, -0x50(%rbp)
0000000100001174	movq	-0x50(%rbp), %rsi
0000000100001178	movl	0x90(%rsi), %r8d
000000010000117f	movl	$0xffffffff, -0x4(%rbp) ## imm = 0xFFFFFFFF
0000000100001186	movl	%r8d, -0x8(%rbp)
000000010000118a	movl	-0x4(%rbp), %r8d
000000010000118e	cmpl	-0x8(%rbp), %r8d
0000000100001192	movq	%rax, -0x138(%rbp)
0000000100001199	movq	%rcx, -0x140(%rbp)
00000001000011a0	movq	%rdx, -0x148(%rbp)
00000001000011a7	movq	%rsi, -0x150(%rbp)
00000001000011ae	jne	0x1000012aa
00000001000011b4	movq	-0x150(%rbp), %rax
00000001000011bb	movq	%rax, -0x28(%rbp)
00000001000011bf	movb	$0x20, -0x29(%rbp)
00000001000011c3	movq	-0x28(%rbp), %rsi
00000001000011c7	leaq	-0x38(%rbp), %rdi
00000001000011cb	callq	0x100001c22
00000001000011d0	jmp	0x1000011d5
00000001000011d5	leaq	-0x38(%rbp), %rax
00000001000011d9	movq	%rax, -0x20(%rbp)
00000001000011dd	movq	0xe34(%rip), %rsi
00000001000011e4	movq	%rax, %rdi
00000001000011e7	callq	0x100001c1c
00000001000011ec	movq	%rax, -0x158(%rbp)
00000001000011f3	jmp	0x1000011f8
00000001000011f8	movb	-0x29(%rbp), %al
00000001000011fb	movq	-0x158(%rbp), %rcx
0000000100001202	movq	%rcx, -0x10(%rbp)
0000000100001206	movb	%al, -0x11(%rbp)
0000000100001209	movq	-0x10(%rbp), %rdx
000000010000120d	movq	(%rdx), %rsi
0000000100001210	movq	0x38(%rsi), %rsi
0000000100001214	movsbl	-0x11(%rbp), %edi
0000000100001218	movl	%edi, -0x15c(%rbp)
000000010000121e	movq	%rdx, %rdi
0000000100001221	movl	-0x15c(%rbp), %r8d
0000000100001228	movq	%rsi, -0x168(%rbp)
000000010000122f	movl	%r8d, %esi
0000000100001232	movq	-0x168(%rbp), %rdx
0000000100001239	callq	*%rdx
000000010000123b	movb	%al, -0x169(%rbp)
0000000100001241	jmp	0x100001286
0000000100001246	movl	%edx, %ecx
0000000100001248	movq	%rax, -0x40(%rbp)
000000010000124c	movl	%ecx, -0x44(%rbp)
000000010000124f	leaq	-0x38(%rbp), %rdi
0000000100001253	callq	0x100001c4c
0000000100001258	jmp	0x10000125d
000000010000125d	movq	-0x40(%rbp), %rax
0000000100001261	movl	-0x44(%rbp), %ecx
0000000100001264	movq	%rax, -0x178(%rbp)
000000010000126b	movl	%ecx, -0x17c(%rbp)
0000000100001271	jmp	0x100001398
0000000100001276	movl	%edx, %ecx
0000000100001278	movq	%rax, %rdi
000000010000127b	movl	%ecx, -0x180(%rbp)
0000000100001281	callq	0x100000fd0
0000000100001286	leaq	-0x38(%rbp), %rdi
000000010000128a	callq	0x100001c4c
000000010000128f	jmp	0x100001294
0000000100001294	movb	-0x169(%rbp), %al
000000010000129a	movsbl	%al, %ecx
000000010000129d	movq	-0x150(%rbp), %rdx
00000001000012a4	movl	%ecx, 0x90(%rdx)
00000001000012aa	movq	-0x150(%rbp), %rax
00000001000012b1	movl	0x90(%rax), %ecx
00000001000012b7	movb	%cl, %dl
00000001000012b9	movb	%dl, -0x181(%rbp)
00000001000012bf	movq	-0x108(%rbp), %rdi
00000001000012c6	movb	-0x181(%rbp), %al
00000001000012cc	movsbl	%al, %r9d
00000001000012d0	movq	-0x120(%rbp), %rsi
00000001000012d7	movq	-0x138(%rbp), %rdx
00000001000012de	movq	-0x140(%rbp), %rcx
00000001000012e5	movq	-0x148(%rbp), %r8
00000001000012ec	callq	0x100001460
00000001000012f1	movq	%rax, -0x190(%rbp)
00000001000012f8	jmp	0x1000012fd
00000001000012fd	leaq	-0x110(%rbp), %rax
0000000100001304	movq	-0x190(%rbp), %rcx
000000010000130b	movq	%rcx, -0x110(%rbp)
0000000100001312	movq	%rax, -0x58(%rbp)
0000000100001316	movq	-0x58(%rbp), %rax
000000010000131a	cmpq	$0x0, (%rax)
0000000100001321	jne	0x1000013c3
0000000100001327	movq	-0xd0(%rbp), %rax
000000010000132e	movq	(%rax), %rcx
0000000100001331	movq	-0x18(%rcx), %rcx
0000000100001335	addq	%rcx, %rax
0000000100001338	movq	%rax, -0x78(%rbp)
000000010000133c	movl	$0x5, -0x7c(%rbp)
0000000100001343	movq	-0x78(%rbp), %rax
0000000100001347	movq	%rax, -0x68(%rbp)
000000010000134b	movl	$0x5, -0x6c(%rbp)
0000000100001352	movq	-0x68(%rbp), %rax
0000000100001356	movl	0x20(%rax), %edx
0000000100001359	orl	$0x5, %edx
000000010000135c	movq	%rax, %rdi
000000010000135f	movl	%edx, %esi
0000000100001361	callq	0x100001c58
0000000100001366	jmp	0x10000136b
000000010000136b	jmp	0x100001370
0000000100001370	jmp	0x1000013c3
0000000100001375	movl	%edx, %ecx
0000000100001377	movq	%rax, -0xf8(%rbp)
000000010000137e	movl	%ecx, -0xfc(%rbp)
0000000100001384	jmp	0x1000013e3
0000000100001389	movl	%edx, %ecx
000000010000138b	movq	%rax, -0x178(%rbp)
0000000100001392	movl	%ecx, -0x17c(%rbp)
0000000100001398	movl	-0x17c(%rbp), %eax
000000010000139e	movq	-0x178(%rbp), %rcx
00000001000013a5	movq	%rcx, -0xf8(%rbp)
00000001000013ac	movl	%eax, -0xfc(%rbp)
00000001000013b2	leaq	-0xf0(%rbp), %rdi
00000001000013b9	callq	0x100001c46
00000001000013be	jmp	0x1000013de
00000001000013c3	jmp	0x1000013c8
00000001000013c8	leaq	-0xf0(%rbp), %rdi
00000001000013cf	callq	0x100001c46
00000001000013d4	jmp	0x1000013d9
00000001000013d9	jmp	0x100001416
00000001000013de	jmp	0x1000013e3
00000001000013e3	movq	-0xf8(%rbp), %rdi
00000001000013ea	callq	0x100001c70
00000001000013ef	movq	-0xd0(%rbp), %rdi
00000001000013f6	movq	(%rdi), %rcx
00000001000013f9	movq	-0x18(%rcx), %rcx
00000001000013fd	addq	%rcx, %rdi
0000000100001400	movq	%rax, -0x198(%rbp)
0000000100001407	callq	0x100001c52
000000010000140c	jmp	0x100001411
0000000100001411	callq	0x100001c76
0000000100001416	movq	-0xd0(%rbp), %rax
000000010000141d	addq	$0x1a0, %rsp            ## imm = 0x1A0
0000000100001424	popq	%rbp
0000000100001425	retq
0000000100001426	movl	%edx, %ecx
0000000100001428	movq	%rax, -0xf8(%rbp)
000000010000142f	movl	%ecx, -0xfc(%rbp)
0000000100001435	callq	0x100001c76
000000010000143a	jmp	0x10000143f
000000010000143f	jmp	0x100001444
0000000100001444	movq	-0xf8(%rbp), %rdi
000000010000144b	callq	0x100001c7c
0000000100001450	movl	%edx, %ecx
0000000100001452	movq	%rax, %rdi
0000000100001455	movl	%ecx, -0x19c(%rbp)
000000010000145b	callq	0x100000fd0
__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_:
0000000100001460	pushq	%rbp
0000000100001461	movq	%rsp, %rbp
0000000100001464	subq	$0x2d0, %rsp            ## imm = 0x2D0
000000010000146b	movb	%r9b, %al
000000010000146e	leaq	-0x228(%rbp), %r10
0000000100001475	leaq	-0x1e8(%rbp), %r11
000000010000147c	movq	%rdi, -0x1f8(%rbp)
0000000100001483	movq	%rsi, -0x200(%rbp)
000000010000148a	movq	%rdx, -0x208(%rbp)
0000000100001491	movq	%rcx, -0x210(%rbp)
0000000100001498	movq	%r8, -0x218(%rbp)
000000010000149f	movb	%al, -0x219(%rbp)
00000001000014a5	movq	-0x1f8(%rbp), %rcx
00000001000014ac	movq	%r11, -0x1d8(%rbp)
00000001000014b3	movq	$-0x1, -0x1e0(%rbp)
00000001000014be	movq	-0x1d8(%rbp), %rdx
00000001000014c5	movq	-0x1e0(%rbp), %rsi
00000001000014cc	movq	%rdx, -0x1c8(%rbp)
00000001000014d3	movq	%rsi, -0x1d0(%rbp)
00000001000014da	movq	-0x1c8(%rbp), %rdx
00000001000014e1	movq	$0x0, (%rdx)
00000001000014e8	movq	-0x1e8(%rbp), %rdx
00000001000014ef	movq	%rdx, -0x228(%rbp)
00000001000014f6	movq	%r10, -0x1c0(%rbp)
00000001000014fd	cmpq	$0x0, %rcx
0000000100001504	jne	0x10000151d
000000010000150a	movq	-0x1f8(%rbp), %rax
0000000100001511	movq	%rax, -0x1f0(%rbp)
0000000100001518	jmp	0x100001ae2
000000010000151d	movq	-0x210(%rbp), %rax
0000000100001524	movq	-0x200(%rbp), %rcx
000000010000152b	subq	%rcx, %rax
000000010000152e	movq	%rax, -0x230(%rbp)
0000000100001535	movq	-0x218(%rbp), %rax
000000010000153c	movq	%rax, -0x158(%rbp)
0000000100001543	movq	-0x158(%rbp), %rax
000000010000154a	movq	0x18(%rax), %rax
000000010000154e	movq	%rax, -0x238(%rbp)
0000000100001555	movq	-0x238(%rbp), %rax
000000010000155c	cmpq	-0x230(%rbp), %rax
0000000100001563	jle	0x100001586
0000000100001569	movq	-0x230(%rbp), %rax
0000000100001570	movq	-0x238(%rbp), %rcx
0000000100001577	subq	%rax, %rcx
000000010000157a	movq	%rcx, -0x238(%rbp)
0000000100001581	jmp	0x100001591
0000000100001586	movq	$0x0, -0x238(%rbp)
0000000100001591	movq	-0x208(%rbp), %rax
0000000100001598	movq	-0x200(%rbp), %rcx
000000010000159f	subq	%rcx, %rax
00000001000015a2	movq	%rax, -0x240(%rbp)
00000001000015a9	cmpq	$0x0, -0x240(%rbp)
00000001000015b4	jle	0x100001691
00000001000015ba	movq	-0x1f8(%rbp), %rax
00000001000015c1	movq	-0x200(%rbp), %rcx
00000001000015c8	movq	-0x240(%rbp), %rdx
00000001000015cf	movq	%rax, -0xf8(%rbp)
00000001000015d6	movq	%rcx, -0x100(%rbp)
00000001000015dd	movq	%rdx, -0x108(%rbp)
00000001000015e4	movq	-0xf8(%rbp), %rax
00000001000015eb	movq	(%rax), %rcx
00000001000015ee	movq	0x60(%rcx), %rcx
00000001000015f2	movq	-0x100(%rbp), %rsi
00000001000015f9	movq	-0x108(%rbp), %rdx
0000000100001600	movq	%rax, %rdi
0000000100001603	callq	*%rcx
0000000100001605	cmpq	-0x240(%rbp), %rax
000000010000160c	je	0x10000168c
0000000100001612	leaq	-0x248(%rbp), %rax
0000000100001619	leaq	-0xf0(%rbp), %rcx
0000000100001620	movq	%rcx, -0xe0(%rbp)
0000000100001627	movq	$-0x1, -0xe8(%rbp)
0000000100001632	movq	-0xe0(%rbp), %rcx
0000000100001639	movq	-0xe8(%rbp), %rdx
0000000100001640	movq	%rcx, -0xd0(%rbp)
0000000100001647	movq	%rdx, -0xd8(%rbp)
000000010000164e	movq	-0xd0(%rbp), %rcx
0000000100001655	movq	$0x0, (%rcx)
000000010000165c	movq	-0xf0(%rbp), %rcx
0000000100001663	movq	%rcx, -0x248(%rbp)
000000010000166a	movq	%rax, -0x8(%rbp)
000000010000166e	movq	$0x0, -0x1f8(%rbp)
0000000100001679	movq	-0x1f8(%rbp), %rax
0000000100001680	movq	%rax, -0x1f0(%rbp)
0000000100001687	jmp	0x100001ae2
000000010000168c	jmp	0x100001691
0000000100001691	cmpq	$0x0, -0x238(%rbp)
000000010000169c	jle	0x10000199b
00000001000016a2	leaq	-0x260(%rbp), %rax
00000001000016a9	movq	-0x238(%rbp), %rcx
00000001000016b0	movb	-0x219(%rbp), %dl
00000001000016b6	movq	%rax, -0x48(%rbp)
00000001000016ba	movq	%rcx, -0x50(%rbp)
00000001000016be	movb	%dl, -0x51(%rbp)
00000001000016c1	movq	-0x48(%rbp), %rax
00000001000016c5	movq	-0x50(%rbp), %rcx
00000001000016c9	movb	-0x51(%rbp), %dl
00000001000016cc	movq	%rax, -0x30(%rbp)
00000001000016d0	movq	%rcx, -0x38(%rbp)
00000001000016d4	movb	%dl, -0x39(%rbp)
00000001000016d7	movq	-0x30(%rbp), %rax
00000001000016db	movq	%rax, -0x28(%rbp)
00000001000016df	movq	-0x28(%rbp), %rcx
00000001000016e3	movq	%rcx, -0x20(%rbp)
00000001000016e7	movq	-0x20(%rbp), %rcx
00000001000016eb	movq	%rcx, -0x18(%rbp)
00000001000016ef	movq	-0x18(%rbp), %rcx
00000001000016f3	movq	%rcx, -0x10(%rbp)
00000001000016f7	movq	-0x38(%rbp), %rsi
00000001000016fb	movq	%rax, %rdi
00000001000016fe	movsbl	-0x39(%rbp), %edx
0000000100001702	callq	0x100001c28
0000000100001707	leaq	-0x260(%rbp), %rax
000000010000170e	movq	-0x1f8(%rbp), %rcx
0000000100001715	movq	%rax, -0xc8(%rbp)
000000010000171c	movq	-0xc8(%rbp), %rax
0000000100001723	movq	%rax, -0xc0(%rbp)
000000010000172a	movq	-0xc0(%rbp), %rax
0000000100001731	movq	%rax, -0xb8(%rbp)
0000000100001738	movq	-0xb8(%rbp), %rsi
000000010000173f	movq	%rsi, -0xb0(%rbp)
0000000100001746	movq	-0xb0(%rbp), %rsi
000000010000174d	movq	%rsi, -0xa8(%rbp)
0000000100001754	movq	-0xa8(%rbp), %rsi
000000010000175b	movzbl	(%rsi), %edx
000000010000175e	andl	$0x1, %edx
0000000100001764	cmpl	$0x0, %edx
000000010000176a	movq	%rcx, -0x290(%rbp)
0000000100001771	movq	%rax, -0x298(%rbp)
0000000100001778	je	0x1000017ad
000000010000177e	movq	-0x298(%rbp), %rax
0000000100001785	movq	%rax, -0x78(%rbp)
0000000100001789	movq	-0x78(%rbp), %rcx
000000010000178d	movq	%rcx, -0x70(%rbp)
0000000100001791	movq	-0x70(%rbp), %rcx
0000000100001795	movq	%rcx, -0x68(%rbp)
0000000100001799	movq	-0x68(%rbp), %rcx
000000010000179d	movq	0x10(%rcx), %rcx
00000001000017a1	movq	%rcx, -0x2a0(%rbp)
00000001000017a8	jmp	0x100001802
00000001000017ad	movq	-0x298(%rbp), %rax
00000001000017b4	movq	%rax, -0xa0(%rbp)
00000001000017bb	movq	-0xa0(%rbp), %rcx
00000001000017c2	movq	%rcx, -0x98(%rbp)
00000001000017c9	movq	-0x98(%rbp), %rcx
00000001000017d0	movq	%rcx, -0x90(%rbp)
00000001000017d7	movq	-0x90(%rbp), %rcx
00000001000017de	addq	$0x1, %rcx
00000001000017e5	movq	%rcx, -0x88(%rbp)
00000001000017ec	movq	-0x88(%rbp), %rcx
00000001000017f3	movq	%rcx, -0x80(%rbp)
00000001000017f7	movq	-0x80(%rbp), %rcx
00000001000017fb	movq	%rcx, -0x2a0(%rbp)
0000000100001802	movq	-0x2a0(%rbp), %rax
0000000100001809	movq	%rax, -0x60(%rbp)
000000010000180d	movq	-0x238(%rbp), %rcx
0000000100001814	movq	-0x290(%rbp), %rdx
000000010000181b	movq	%rdx, -0x110(%rbp)
0000000100001822	movq	%rax, -0x118(%rbp)
0000000100001829	movq	%rcx, -0x120(%rbp)
0000000100001830	movq	-0x110(%rbp), %rax
0000000100001837	movq	(%rax), %rsi
000000010000183a	movq	0x60(%rsi), %rsi
000000010000183e	movq	-0x118(%rbp), %rdi
0000000100001845	movq	%rdi, -0x2a8(%rbp)
000000010000184c	movq	%rax, %rdi
000000010000184f	movq	-0x2a8(%rbp), %rax
0000000100001856	movq	%rsi, -0x2b0(%rbp)
000000010000185d	movq	%rax, %rsi
0000000100001860	movq	%rcx, %rdx
0000000100001863	movq	-0x2b0(%rbp), %rcx
000000010000186a	callq	*%rcx
000000010000186c	movq	%rax, -0x2b8(%rbp)
0000000100001873	jmp	0x100001878
0000000100001878	jmp	0x10000187d
000000010000187d	movq	-0x2b8(%rbp), %rax
0000000100001884	cmpq	-0x238(%rbp), %rax
000000010000188b	je	0x100001946
0000000100001891	leaq	-0x148(%rbp), %rax
0000000100001898	movq	%rax, -0x138(%rbp)
000000010000189f	movq	$-0x1, -0x140(%rbp)
00000001000018aa	movq	-0x138(%rbp), %rax
00000001000018b1	movq	-0x140(%rbp), %rcx
00000001000018b8	movq	%rax, -0x128(%rbp)
00000001000018bf	movq	%rcx, -0x130(%rbp)
00000001000018c6	movq	-0x128(%rbp), %rax
00000001000018cd	movq	$0x0, (%rax)
00000001000018d4	movq	-0x148(%rbp), %rax
00000001000018db	movq	%rax, -0x2c0(%rbp)
00000001000018e2	leaq	-0x278(%rbp), %rax
00000001000018e9	movq	-0x2c0(%rbp), %rcx
00000001000018f0	movq	%rcx, -0x278(%rbp)
00000001000018f7	movq	%rax, -0x150(%rbp)
00000001000018fe	movq	$0x0, -0x1f8(%rbp)
0000000100001909	movq	-0x1f8(%rbp), %rax
0000000100001910	movq	%rax, -0x1f0(%rbp)
0000000100001917	movl	$0x1, -0x27c(%rbp)
0000000100001921	jmp	0x100001950
0000000100001926	movl	%edx, %ecx
0000000100001928	movq	%rax, -0x268(%rbp)
000000010000192f	movl	%ecx, -0x26c(%rbp)
0000000100001935	leaq	-0x260(%rbp), %rdi
000000010000193c	callq	0x100001c2e
0000000100001941	jmp	0x100001996
0000000100001946	movl	$0x0, -0x27c(%rbp)
0000000100001950	leaq	-0x260(%rbp), %rdi
0000000100001957	callq	0x100001c2e
000000010000195c	movl	-0x27c(%rbp), %eax
0000000100001962	movl	%eax, %ecx
0000000100001964	subl	$0x1, %ecx
0000000100001967	movl	%eax, -0x2c4(%rbp)
000000010000196d	movl	%ecx, -0x2c8(%rbp)
0000000100001973	je	0x100001ae2
0000000100001979	jmp	0x10000197e
000000010000197e	movl	-0x2c4(%rbp), %eax
0000000100001984	testl	%eax, %eax
0000000100001986	jne	0x100001b0e
000000010000198c	jmp	0x100001991
0000000100001991	jmp	0x10000199b
0000000100001996	jmp	0x100001af2
000000010000199b	movq	-0x210(%rbp), %rax
00000001000019a2	movq	-0x208(%rbp), %rcx
00000001000019a9	subq	%rcx, %rax
00000001000019ac	movq	%rax, -0x240(%rbp)
00000001000019b3	cmpq	$0x0, -0x240(%rbp)
00000001000019be	jle	0x100001a9e
00000001000019c4	movq	-0x1f8(%rbp), %rax
00000001000019cb	movq	-0x208(%rbp), %rcx
00000001000019d2	movq	-0x240(%rbp), %rdx
00000001000019d9	movq	%rax, -0x160(%rbp)
00000001000019e0	movq	%rcx, -0x168(%rbp)
00000001000019e7	movq	%rdx, -0x170(%rbp)
00000001000019ee	movq	-0x160(%rbp), %rax
00000001000019f5	movq	(%rax), %rcx
00000001000019f8	movq	0x60(%rcx), %rcx
00000001000019fc	movq	-0x168(%rbp), %rsi
0000000100001a03	movq	-0x170(%rbp), %rdx
0000000100001a0a	movq	%rax, %rdi
0000000100001a0d	callq	*%rcx
0000000100001a0f	cmpq	-0x240(%rbp), %rax
0000000100001a16	je	0x100001a99
0000000100001a1c	leaq	-0x288(%rbp), %rax
0000000100001a23	leaq	-0x198(%rbp), %rcx
0000000100001a2a	movq	%rcx, -0x188(%rbp)
0000000100001a31	movq	$-0x1, -0x190(%rbp)
0000000100001a3c	movq	-0x188(%rbp), %rcx
0000000100001a43	movq	-0x190(%rbp), %rdx
0000000100001a4a	movq	%rcx, -0x178(%rbp)
0000000100001a51	movq	%rdx, -0x180(%rbp)
0000000100001a58	movq	-0x178(%rbp), %rcx
0000000100001a5f	movq	$0x0, (%rcx)
0000000100001a66	movq	-0x198(%rbp), %rcx
0000000100001a6d	movq	%rcx, -0x288(%rbp)
0000000100001a74	movq	%rax, -0x1a0(%rbp)
0000000100001a7b	movq	$0x0, -0x1f8(%rbp)
0000000100001a86	movq	-0x1f8(%rbp), %rax
0000000100001a8d	movq	%rax, -0x1f0(%rbp)
0000000100001a94	jmp	0x100001ae2
0000000100001a99	jmp	0x100001a9e
0000000100001a9e	movq	-0x218(%rbp), %rax
0000000100001aa5	movq	%rax, -0x1a8(%rbp)
0000000100001aac	movq	$0x0, -0x1b0(%rbp)
0000000100001ab7	movq	-0x1a8(%rbp), %rax
0000000100001abe	movq	0x18(%rax), %rcx
0000000100001ac2	movq	%rcx, -0x1b8(%rbp)
0000000100001ac9	movq	-0x1b0(%rbp), %rcx
0000000100001ad0	movq	%rcx, 0x18(%rax)
0000000100001ad4	movq	-0x1f8(%rbp), %rax
0000000100001adb	movq	%rax, -0x1f0(%rbp)
0000000100001ae2	movq	-0x1f0(%rbp), %rax
0000000100001ae9	addq	$0x2d0, %rsp            ## imm = 0x2D0
0000000100001af0	popq	%rbp
0000000100001af1	retq
0000000100001af2	movq	-0x268(%rbp), %rdi
0000000100001af9	callq	0x100001c7c
0000000100001afe	movl	%edx, %ecx
0000000100001b00	movq	%rax, %rdi
0000000100001b03	movl	%ecx, -0x2cc(%rbp)
0000000100001b09	callq	0x100000fd0
0000000100001b0e	nop
__ZN1BC2Ev:
0000000100001b10	pushq	%rbp
0000000100001b11	movq	%rsp, %rbp
0000000100001b14	subq	$0x50, %rsp
0000000100001b18	movq	%rdi, -0x18(%rbp)
0000000100001b1c	movq	%rdi, %rax
0000000100001b1f	movq	%rax, -0x30(%rbp)
0000000100001b23	callq	0x100001bf2
0000000100001b28	movq	0x4e1(%rip), %rdi
0000000100001b2f	leaq	0x3d1(%rip), %rsi
0000000100001b36	callq	0x100001c16
0000000100001b3b	movq	%rax, -0x38(%rbp)
0000000100001b3f	jmp	0x100001b44
0000000100001b44	movq	-0x38(%rbp), %rax
0000000100001b48	movq	%rax, -0x8(%rbp)
0000000100001b4c	leaq	-0xc93(%rip), %rcx
0000000100001b53	movq	%rcx, -0x10(%rbp)
0000000100001b57	movq	-0x8(%rbp), %rdi
0000000100001b5b	callq	*%rcx
0000000100001b5d	movq	%rax, -0x40(%rbp)
0000000100001b61	jmp	0x100001b66
0000000100001b66	jmp	0x100001b6b
0000000100001b6b	addq	$0x50, %rsp
0000000100001b6f	popq	%rbp
0000000100001b70	retq
0000000100001b71	movl	%edx, %ecx
0000000100001b73	movq	%rax, -0x20(%rbp)
0000000100001b77	movl	%ecx, -0x24(%rbp)
0000000100001b7a	movq	-0x30(%rbp), %rdi
0000000100001b7e	callq	0x100001bfe
0000000100001b83	jmp	0x100001b88
0000000100001b88	jmp	0x100001b8d
0000000100001b8d	movq	-0x20(%rbp), %rdi
0000000100001b91	callq	0x100001c7c
0000000100001b96	movl	%edx, %ecx
0000000100001b98	movq	%rax, %rdi
0000000100001b9b	movl	%ecx, -0x44(%rbp)
0000000100001b9e	callq	0x100000fd0
0000000100001ba3	nopw	%cs:(%rax,%rax)
__ZN1AC2Ev:
0000000100001bb0	pushq	%rbp
0000000100001bb1	movq	%rsp, %rbp
0000000100001bb4	subq	$0x20, %rsp
0000000100001bb8	movq	0x451(%rip), %rax
0000000100001bbf	leaq	0x34e(%rip), %rsi
0000000100001bc6	movq	%rdi, -0x18(%rbp)
0000000100001bca	movq	%rax, %rdi
0000000100001bcd	callq	0x100001c16
0000000100001bd2	leaq	-0xd19(%rip), %rsi
0000000100001bd9	movq	%rax, -0x8(%rbp)
0000000100001bdd	movq	%rsi, -0x10(%rbp)
0000000100001be1	movq	-0x8(%rbp), %rdi
0000000100001be5	callq	*-0x10(%rbp)
0000000100001be8	movq	%rax, -0x20(%rbp)
0000000100001bec	addq	$0x20, %rsp
0000000100001bf0	popq	%rbp
0000000100001bf1	retq
